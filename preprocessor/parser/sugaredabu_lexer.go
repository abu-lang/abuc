// Code generated from SugaredAbuLexer.g4 by ANTLR 4.10.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SugaredAbuLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var sugaredabulexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func sugaredabulexerLexerInit() {
	staticData := &sugaredabulexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "'and'", "'or'", "'not'", "'abs'", "'.'", "'+'", "'-'", "'/'", "'*'",
		"'%'", "'=='", "'>'", "'<'", "'>='", "'<='", "'!='", "'::'", "':'",
		"';'", "':='", "'='", "'('", "')'", "'{'", "'}'", "'has'", "'where'",
		"'physical'", "'logical'", "'input'", "'output'", "'rule'", "", "",
		"'on'", "'let'", "'in'", "'default'", "'for'", "'all'", "'do'", "'owise'",
		"'boolean'", "'integer'", "'decimal'", "'string'", "'true'", "'false'",
	}
	staticData.symbolicNames = []string{
		"", "AND", "OR", "NOT", "ABS", "DOT", "PLUS", "MINUS", "DIV", "MUL",
		"MOD", "EQUALS", "GT", "LT", "GTE", "LTE", "NOTEQUALS", "DOUBLECOLON",
		"COLON", "SEMICOLON", "COLONEQUAL", "EQUALSIGN", "RL_BRACKET", "RR_BRACKET",
		"CL_BRACKET", "CR_BRACKET", "HAS", "WHERE", "PHYSICAL", "LOGICAL", "INPUT",
		"OUTPUT", "RULE", "THIS", "EXT", "ON", "LET", "IN", "DEFAULT", "FOR",
		"ALL", "DO", "OWISE", "BOOLEAN", "INTEGER", "DECIMAL", "STRING", "TRUE",
		"FALSE", "ID", "QUOTED_STRING", "DEC_LITERAL", "INT_LITERAL", "WS",
		"COMMENT", "LINE_COMMENT",
	}
	staticData.ruleNames = []string{
		"AND", "OR", "NOT", "ABS", "DOT", "PLUS", "MINUS", "DIV", "MUL", "MOD",
		"EQUALS", "GT", "LT", "GTE", "LTE", "NOTEQUALS", "DOUBLECOLON", "COLON",
		"SEMICOLON", "COLONEQUAL", "EQUALSIGN", "RL_BRACKET", "RR_BRACKET",
		"CL_BRACKET", "CR_BRACKET", "HAS", "WHERE", "PHYSICAL", "LOGICAL", "INPUT",
		"OUTPUT", "RULE", "THIS", "EXT", "ON", "LET", "IN", "DEFAULT", "FOR",
		"ALL", "DO", "OWISE", "BOOLEAN", "INTEGER", "DECIMAL", "STRING", "TRUE",
		"FALSE", "ID", "QUOTED_STRING", "DEC_LITERAL", "INT_LITERAL", "WS",
		"COMMENT", "LINE_COMMENT",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 55, 373, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1,
		1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1,
		5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10,
		1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1,
		14, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18,
		1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1,
		23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26,
		1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1,
		27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29,
		1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1,
		30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32,
		1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1,
		34, 1, 35, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 37,
		1, 37, 1, 37, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 38, 1, 39, 1,
		39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 41, 1, 41,
		1, 41, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 43, 1,
		43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1, 44, 1, 44,
		1, 44, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1,
		45, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47,
		1, 47, 1, 48, 1, 48, 5, 48, 312, 8, 48, 10, 48, 12, 48, 315, 9, 48, 1,
		49, 1, 49, 5, 49, 319, 8, 49, 10, 49, 12, 49, 322, 9, 49, 1, 49, 1, 49,
		1, 50, 1, 50, 1, 50, 5, 50, 329, 8, 50, 10, 50, 12, 50, 332, 9, 50, 1,
		51, 1, 51, 1, 51, 5, 51, 337, 8, 51, 10, 51, 12, 51, 340, 9, 51, 3, 51,
		342, 8, 51, 1, 52, 4, 52, 345, 8, 52, 11, 52, 12, 52, 346, 1, 52, 1, 52,
		1, 53, 1, 53, 1, 53, 1, 53, 5, 53, 355, 8, 53, 10, 53, 12, 53, 358, 9,
		53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 54, 1, 54, 5, 54, 367, 8, 54,
		10, 54, 12, 54, 370, 9, 54, 1, 54, 1, 54, 1, 356, 0, 55, 1, 1, 3, 2, 5,
		3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25,
		13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43,
		22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61,
		31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79,
		40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97,
		49, 99, 50, 101, 51, 103, 52, 105, 53, 107, 54, 109, 55, 1, 0, 7, 2, 0,
		65, 90, 97, 122, 3, 0, 48, 57, 65, 90, 97, 122, 1, 0, 34, 34, 1, 0, 48,
		57, 1, 0, 49, 57, 3, 0, 9, 10, 13, 13, 32, 32, 2, 0, 10, 10, 13, 13, 380,
		0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0,
		0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0,
		0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0,
		0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1,
		0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39,
		1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0,
		47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0,
		0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0,
		0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0,
		0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1,
		0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85,
		1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0,
		93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0,
		0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1,
		0, 0, 0, 0, 109, 1, 0, 0, 0, 1, 111, 1, 0, 0, 0, 3, 115, 1, 0, 0, 0, 5,
		118, 1, 0, 0, 0, 7, 122, 1, 0, 0, 0, 9, 126, 1, 0, 0, 0, 11, 128, 1, 0,
		0, 0, 13, 130, 1, 0, 0, 0, 15, 132, 1, 0, 0, 0, 17, 134, 1, 0, 0, 0, 19,
		136, 1, 0, 0, 0, 21, 138, 1, 0, 0, 0, 23, 141, 1, 0, 0, 0, 25, 143, 1,
		0, 0, 0, 27, 145, 1, 0, 0, 0, 29, 148, 1, 0, 0, 0, 31, 151, 1, 0, 0, 0,
		33, 154, 1, 0, 0, 0, 35, 157, 1, 0, 0, 0, 37, 159, 1, 0, 0, 0, 39, 161,
		1, 0, 0, 0, 41, 164, 1, 0, 0, 0, 43, 166, 1, 0, 0, 0, 45, 168, 1, 0, 0,
		0, 47, 170, 1, 0, 0, 0, 49, 172, 1, 0, 0, 0, 51, 174, 1, 0, 0, 0, 53, 178,
		1, 0, 0, 0, 55, 184, 1, 0, 0, 0, 57, 193, 1, 0, 0, 0, 59, 201, 1, 0, 0,
		0, 61, 207, 1, 0, 0, 0, 63, 214, 1, 0, 0, 0, 65, 219, 1, 0, 0, 0, 67, 226,
		1, 0, 0, 0, 69, 232, 1, 0, 0, 0, 71, 235, 1, 0, 0, 0, 73, 239, 1, 0, 0,
		0, 75, 242, 1, 0, 0, 0, 77, 250, 1, 0, 0, 0, 79, 254, 1, 0, 0, 0, 81, 258,
		1, 0, 0, 0, 83, 261, 1, 0, 0, 0, 85, 267, 1, 0, 0, 0, 87, 275, 1, 0, 0,
		0, 89, 283, 1, 0, 0, 0, 91, 291, 1, 0, 0, 0, 93, 298, 1, 0, 0, 0, 95, 303,
		1, 0, 0, 0, 97, 309, 1, 0, 0, 0, 99, 316, 1, 0, 0, 0, 101, 325, 1, 0, 0,
		0, 103, 341, 1, 0, 0, 0, 105, 344, 1, 0, 0, 0, 107, 350, 1, 0, 0, 0, 109,
		364, 1, 0, 0, 0, 111, 112, 5, 97, 0, 0, 112, 113, 5, 110, 0, 0, 113, 114,
		5, 100, 0, 0, 114, 2, 1, 0, 0, 0, 115, 116, 5, 111, 0, 0, 116, 117, 5,
		114, 0, 0, 117, 4, 1, 0, 0, 0, 118, 119, 5, 110, 0, 0, 119, 120, 5, 111,
		0, 0, 120, 121, 5, 116, 0, 0, 121, 6, 1, 0, 0, 0, 122, 123, 5, 97, 0, 0,
		123, 124, 5, 98, 0, 0, 124, 125, 5, 115, 0, 0, 125, 8, 1, 0, 0, 0, 126,
		127, 5, 46, 0, 0, 127, 10, 1, 0, 0, 0, 128, 129, 5, 43, 0, 0, 129, 12,
		1, 0, 0, 0, 130, 131, 5, 45, 0, 0, 131, 14, 1, 0, 0, 0, 132, 133, 5, 47,
		0, 0, 133, 16, 1, 0, 0, 0, 134, 135, 5, 42, 0, 0, 135, 18, 1, 0, 0, 0,
		136, 137, 5, 37, 0, 0, 137, 20, 1, 0, 0, 0, 138, 139, 5, 61, 0, 0, 139,
		140, 5, 61, 0, 0, 140, 22, 1, 0, 0, 0, 141, 142, 5, 62, 0, 0, 142, 24,
		1, 0, 0, 0, 143, 144, 5, 60, 0, 0, 144, 26, 1, 0, 0, 0, 145, 146, 5, 62,
		0, 0, 146, 147, 5, 61, 0, 0, 147, 28, 1, 0, 0, 0, 148, 149, 5, 60, 0, 0,
		149, 150, 5, 61, 0, 0, 150, 30, 1, 0, 0, 0, 151, 152, 5, 33, 0, 0, 152,
		153, 5, 61, 0, 0, 153, 32, 1, 0, 0, 0, 154, 155, 5, 58, 0, 0, 155, 156,
		5, 58, 0, 0, 156, 34, 1, 0, 0, 0, 157, 158, 5, 58, 0, 0, 158, 36, 1, 0,
		0, 0, 159, 160, 5, 59, 0, 0, 160, 38, 1, 0, 0, 0, 161, 162, 5, 58, 0, 0,
		162, 163, 5, 61, 0, 0, 163, 40, 1, 0, 0, 0, 164, 165, 5, 61, 0, 0, 165,
		42, 1, 0, 0, 0, 166, 167, 5, 40, 0, 0, 167, 44, 1, 0, 0, 0, 168, 169, 5,
		41, 0, 0, 169, 46, 1, 0, 0, 0, 170, 171, 5, 123, 0, 0, 171, 48, 1, 0, 0,
		0, 172, 173, 5, 125, 0, 0, 173, 50, 1, 0, 0, 0, 174, 175, 5, 104, 0, 0,
		175, 176, 5, 97, 0, 0, 176, 177, 5, 115, 0, 0, 177, 52, 1, 0, 0, 0, 178,
		179, 5, 119, 0, 0, 179, 180, 5, 104, 0, 0, 180, 181, 5, 101, 0, 0, 181,
		182, 5, 114, 0, 0, 182, 183, 5, 101, 0, 0, 183, 54, 1, 0, 0, 0, 184, 185,
		5, 112, 0, 0, 185, 186, 5, 104, 0, 0, 186, 187, 5, 121, 0, 0, 187, 188,
		5, 115, 0, 0, 188, 189, 5, 105, 0, 0, 189, 190, 5, 99, 0, 0, 190, 191,
		5, 97, 0, 0, 191, 192, 5, 108, 0, 0, 192, 56, 1, 0, 0, 0, 193, 194, 5,
		108, 0, 0, 194, 195, 5, 111, 0, 0, 195, 196, 5, 103, 0, 0, 196, 197, 5,
		105, 0, 0, 197, 198, 5, 99, 0, 0, 198, 199, 5, 97, 0, 0, 199, 200, 5, 108,
		0, 0, 200, 58, 1, 0, 0, 0, 201, 202, 5, 105, 0, 0, 202, 203, 5, 110, 0,
		0, 203, 204, 5, 112, 0, 0, 204, 205, 5, 117, 0, 0, 205, 206, 5, 116, 0,
		0, 206, 60, 1, 0, 0, 0, 207, 208, 5, 111, 0, 0, 208, 209, 5, 117, 0, 0,
		209, 210, 5, 116, 0, 0, 210, 211, 5, 112, 0, 0, 211, 212, 5, 117, 0, 0,
		212, 213, 5, 116, 0, 0, 213, 62, 1, 0, 0, 0, 214, 215, 5, 114, 0, 0, 215,
		216, 5, 117, 0, 0, 216, 217, 5, 108, 0, 0, 217, 218, 5, 101, 0, 0, 218,
		64, 1, 0, 0, 0, 219, 220, 5, 116, 0, 0, 220, 221, 5, 104, 0, 0, 221, 222,
		5, 105, 0, 0, 222, 223, 5, 115, 0, 0, 223, 224, 1, 0, 0, 0, 224, 225, 3,
		9, 4, 0, 225, 66, 1, 0, 0, 0, 226, 227, 5, 101, 0, 0, 227, 228, 5, 120,
		0, 0, 228, 229, 5, 116, 0, 0, 229, 230, 1, 0, 0, 0, 230, 231, 3, 9, 4,
		0, 231, 68, 1, 0, 0, 0, 232, 233, 5, 111, 0, 0, 233, 234, 5, 110, 0, 0,
		234, 70, 1, 0, 0, 0, 235, 236, 5, 108, 0, 0, 236, 237, 5, 101, 0, 0, 237,
		238, 5, 116, 0, 0, 238, 72, 1, 0, 0, 0, 239, 240, 5, 105, 0, 0, 240, 241,
		5, 110, 0, 0, 241, 74, 1, 0, 0, 0, 242, 243, 5, 100, 0, 0, 243, 244, 5,
		101, 0, 0, 244, 245, 5, 102, 0, 0, 245, 246, 5, 97, 0, 0, 246, 247, 5,
		117, 0, 0, 247, 248, 5, 108, 0, 0, 248, 249, 5, 116, 0, 0, 249, 76, 1,
		0, 0, 0, 250, 251, 5, 102, 0, 0, 251, 252, 5, 111, 0, 0, 252, 253, 5, 114,
		0, 0, 253, 78, 1, 0, 0, 0, 254, 255, 5, 97, 0, 0, 255, 256, 5, 108, 0,
		0, 256, 257, 5, 108, 0, 0, 257, 80, 1, 0, 0, 0, 258, 259, 5, 100, 0, 0,
		259, 260, 5, 111, 0, 0, 260, 82, 1, 0, 0, 0, 261, 262, 5, 111, 0, 0, 262,
		263, 5, 119, 0, 0, 263, 264, 5, 105, 0, 0, 264, 265, 5, 115, 0, 0, 265,
		266, 5, 101, 0, 0, 266, 84, 1, 0, 0, 0, 267, 268, 5, 98, 0, 0, 268, 269,
		5, 111, 0, 0, 269, 270, 5, 111, 0, 0, 270, 271, 5, 108, 0, 0, 271, 272,
		5, 101, 0, 0, 272, 273, 5, 97, 0, 0, 273, 274, 5, 110, 0, 0, 274, 86, 1,
		0, 0, 0, 275, 276, 5, 105, 0, 0, 276, 277, 5, 110, 0, 0, 277, 278, 5, 116,
		0, 0, 278, 279, 5, 101, 0, 0, 279, 280, 5, 103, 0, 0, 280, 281, 5, 101,
		0, 0, 281, 282, 5, 114, 0, 0, 282, 88, 1, 0, 0, 0, 283, 284, 5, 100, 0,
		0, 284, 285, 5, 101, 0, 0, 285, 286, 5, 99, 0, 0, 286, 287, 5, 105, 0,
		0, 287, 288, 5, 109, 0, 0, 288, 289, 5, 97, 0, 0, 289, 290, 5, 108, 0,
		0, 290, 90, 1, 0, 0, 0, 291, 292, 5, 115, 0, 0, 292, 293, 5, 116, 0, 0,
		293, 294, 5, 114, 0, 0, 294, 295, 5, 105, 0, 0, 295, 296, 5, 110, 0, 0,
		296, 297, 5, 103, 0, 0, 297, 92, 1, 0, 0, 0, 298, 299, 5, 116, 0, 0, 299,
		300, 5, 114, 0, 0, 300, 301, 5, 117, 0, 0, 301, 302, 5, 101, 0, 0, 302,
		94, 1, 0, 0, 0, 303, 304, 5, 102, 0, 0, 304, 305, 5, 97, 0, 0, 305, 306,
		5, 108, 0, 0, 306, 307, 5, 115, 0, 0, 307, 308, 5, 101, 0, 0, 308, 96,
		1, 0, 0, 0, 309, 313, 7, 0, 0, 0, 310, 312, 7, 1, 0, 0, 311, 310, 1, 0,
		0, 0, 312, 315, 1, 0, 0, 0, 313, 311, 1, 0, 0, 0, 313, 314, 1, 0, 0, 0,
		314, 98, 1, 0, 0, 0, 315, 313, 1, 0, 0, 0, 316, 320, 5, 34, 0, 0, 317,
		319, 8, 2, 0, 0, 318, 317, 1, 0, 0, 0, 319, 322, 1, 0, 0, 0, 320, 318,
		1, 0, 0, 0, 320, 321, 1, 0, 0, 0, 321, 323, 1, 0, 0, 0, 322, 320, 1, 0,
		0, 0, 323, 324, 5, 34, 0, 0, 324, 100, 1, 0, 0, 0, 325, 326, 3, 103, 51,
		0, 326, 330, 3, 9, 4, 0, 327, 329, 7, 3, 0, 0, 328, 327, 1, 0, 0, 0, 329,
		332, 1, 0, 0, 0, 330, 328, 1, 0, 0, 0, 330, 331, 1, 0, 0, 0, 331, 102,
		1, 0, 0, 0, 332, 330, 1, 0, 0, 0, 333, 342, 5, 48, 0, 0, 334, 338, 7, 4,
		0, 0, 335, 337, 7, 3, 0, 0, 336, 335, 1, 0, 0, 0, 337, 340, 1, 0, 0, 0,
		338, 336, 1, 0, 0, 0, 338, 339, 1, 0, 0, 0, 339, 342, 1, 0, 0, 0, 340,
		338, 1, 0, 0, 0, 341, 333, 1, 0, 0, 0, 341, 334, 1, 0, 0, 0, 342, 104,
		1, 0, 0, 0, 343, 345, 7, 5, 0, 0, 344, 343, 1, 0, 0, 0, 345, 346, 1, 0,
		0, 0, 346, 344, 1, 0, 0, 0, 346, 347, 1, 0, 0, 0, 347, 348, 1, 0, 0, 0,
		348, 349, 6, 52, 0, 0, 349, 106, 1, 0, 0, 0, 350, 351, 5, 92, 0, 0, 351,
		352, 5, 64, 0, 0, 352, 356, 1, 0, 0, 0, 353, 355, 9, 0, 0, 0, 354, 353,
		1, 0, 0, 0, 355, 358, 1, 0, 0, 0, 356, 357, 1, 0, 0, 0, 356, 354, 1, 0,
		0, 0, 357, 359, 1, 0, 0, 0, 358, 356, 1, 0, 0, 0, 359, 360, 5, 64, 0, 0,
		360, 361, 5, 92, 0, 0, 361, 362, 1, 0, 0, 0, 362, 363, 6, 53, 1, 0, 363,
		108, 1, 0, 0, 0, 364, 368, 5, 35, 0, 0, 365, 367, 8, 6, 0, 0, 366, 365,
		1, 0, 0, 0, 367, 370, 1, 0, 0, 0, 368, 366, 1, 0, 0, 0, 368, 369, 1, 0,
		0, 0, 369, 371, 1, 0, 0, 0, 370, 368, 1, 0, 0, 0, 371, 372, 6, 54, 1, 0,
		372, 110, 1, 0, 0, 0, 9, 0, 313, 320, 330, 338, 341, 346, 356, 368, 2,
		0, 1, 0, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SugaredAbuLexerInit initializes any static state used to implement SugaredAbuLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSugaredAbuLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SugaredAbuLexerInit() {
	staticData := &sugaredabulexerLexerStaticData
	staticData.once.Do(sugaredabulexerLexerInit)
}

// NewSugaredAbuLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSugaredAbuLexer(input antlr.CharStream) *SugaredAbuLexer {
	SugaredAbuLexerInit()
	l := new(SugaredAbuLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &sugaredabulexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "SugaredAbuLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SugaredAbuLexer tokens.
const (
	SugaredAbuLexerAND           = 1
	SugaredAbuLexerOR            = 2
	SugaredAbuLexerNOT           = 3
	SugaredAbuLexerABS           = 4
	SugaredAbuLexerDOT           = 5
	SugaredAbuLexerPLUS          = 6
	SugaredAbuLexerMINUS         = 7
	SugaredAbuLexerDIV           = 8
	SugaredAbuLexerMUL           = 9
	SugaredAbuLexerMOD           = 10
	SugaredAbuLexerEQUALS        = 11
	SugaredAbuLexerGT            = 12
	SugaredAbuLexerLT            = 13
	SugaredAbuLexerGTE           = 14
	SugaredAbuLexerLTE           = 15
	SugaredAbuLexerNOTEQUALS     = 16
	SugaredAbuLexerDOUBLECOLON   = 17
	SugaredAbuLexerCOLON         = 18
	SugaredAbuLexerSEMICOLON     = 19
	SugaredAbuLexerCOLONEQUAL    = 20
	SugaredAbuLexerEQUALSIGN     = 21
	SugaredAbuLexerRL_BRACKET    = 22
	SugaredAbuLexerRR_BRACKET    = 23
	SugaredAbuLexerCL_BRACKET    = 24
	SugaredAbuLexerCR_BRACKET    = 25
	SugaredAbuLexerHAS           = 26
	SugaredAbuLexerWHERE         = 27
	SugaredAbuLexerPHYSICAL      = 28
	SugaredAbuLexerLOGICAL       = 29
	SugaredAbuLexerINPUT         = 30
	SugaredAbuLexerOUTPUT        = 31
	SugaredAbuLexerRULE          = 32
	SugaredAbuLexerTHIS          = 33
	SugaredAbuLexerEXT           = 34
	SugaredAbuLexerON            = 35
	SugaredAbuLexerLET           = 36
	SugaredAbuLexerIN            = 37
	SugaredAbuLexerDEFAULT       = 38
	SugaredAbuLexerFOR           = 39
	SugaredAbuLexerALL           = 40
	SugaredAbuLexerDO            = 41
	SugaredAbuLexerOWISE         = 42
	SugaredAbuLexerBOOLEAN       = 43
	SugaredAbuLexerINTEGER       = 44
	SugaredAbuLexerDECIMAL       = 45
	SugaredAbuLexerSTRING        = 46
	SugaredAbuLexerTRUE          = 47
	SugaredAbuLexerFALSE         = 48
	SugaredAbuLexerID            = 49
	SugaredAbuLexerQUOTED_STRING = 50
	SugaredAbuLexerDEC_LITERAL   = 51
	SugaredAbuLexerINT_LITERAL   = 52
	SugaredAbuLexerWS            = 53
	SugaredAbuLexerCOMMENT       = 54
	SugaredAbuLexerLINE_COMMENT  = 55
)
